{"version":3,"sources":["webpack:///webpack/bootstrap a7ca5d1ebf47ff967fa6","webpack:///./js/index.js","webpack:///./js/toolkit.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,wBAAuB,YAAY;AACnC,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,QAAO,YAAY;AACnB,qBAAoB,6BAA6B;AACjD;;AAEA,6BAA4B,aAAa,GAAG,aAAa;AACzD;AACA;AACA,MAAK;AACL,cAAa,SAAS;AACtB,IAAG;AACH;;AAEA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a7ca5d1ebf47ff967fa6","const toolkit = require('./toolkit');\n\nclass Grid {\n    constructor(container) {\n        this._$container = container;\n    }\n\n    build() {\n        const matrix = toolkit.makeMatrix();\n\n        const $cells = matrix.map(rowVals => rowVals.map(\n            cellVal => $(\"<span>\").text(cellVal)\n        ));\n\n        const $divArray = $cells.map($spanArray =>\n            $(\"<div>\").addClass(\"row\").append($spanArray)\n        );\n\n        this._$container.append($divArray);\n    }\n}\n\nnew Grid($(\"#container\")).build();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","const matrixToolkit = {\n  /*\n     * 创建行\n     */\n  makeRow(v = 0) {\n    return new Array(9).fill(v);\n  },\n\n  /*\n     * 创建九宫格数组\n     */\n  makeMatrix(v = 0) {\n    return Array.from({ length: 9 }, () => this.makeRow(v));\n  },\n\n  /*\n     * 洗牌算法\n     */\n  shuffleRow(array) {\n    const randomAry = Array.from(\n      { length: 9 },\n      (_, idx) => ({ random: Math.random(), idx })\n    );\n\n    return randomAry.sort(({ random: r1 }, { random: r2 }) => {\n      if (r1 == r2) return 0;\n      return (r1 > r2) ? 1 : -1;\n    })\n      .map(({ _, idx }) => array[idx]);\n  },\n};\n\nmodule.exports = matrixToolkit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/toolkit.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}